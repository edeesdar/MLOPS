{
  "Lab Account Inline Policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "IAMEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "iam:List*",
          "iam:Get*",
          "iam:Update*",
          "iam:CreateGroup",
          "iam:DeleteRole",
          "iam:CreateAccessKey",
          "iam:CreateRole",
          "iam:DeleteUser",
          "iam:CreateUser",
          "iam:PassRole",
          "iam:CreatePolicy",
          "iam:DeleteUserPolicy",
          "iam:PutRolePolicy",
          "iam:DetachUserPolicy",
          "iam:AttachRolePolicy",
          "iam:DeletePolicy",
          "iam:DeleteRolePolicy",
          "iam:AttachUserPolicy",
          "iam:DetachRolePolicy",
          "iam:PutUserPolicy",
          "iam:TagPolicy",
          "iam:TagRole",
          "iam:TagUser",
          "iam:UntagRole",
          "iam:UntagUser",
          "iam:UntagPolicy",
          "iam:CreateInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:AddRoleToInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile"
        ],
        "Resource": "*"
      },
      {
        "Sid": "S3FullAccess",
        "Effect": "Allow",
        "Action": [
          "s3:*"
        ],
        "Resource": [
          "arn:aws:s3:::*",
          "arn:aws:s3:::*/*"
        ]
      },
      {
        "Sid": "EC2EnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "ec2:List*",
          "ec2:Describe*",
          "ec2:Get*",
          "ec2:Update*",
          "ec2:RunInstances",
          "ec2:StartInstances",
          "ec2:StopInstances",
          "ec2:RebootInstances",
          "ec2:TerminateInstances",
          "ec2:CreateKeyPair",
          "ec2:DeleteKeyPair",
          "ec2:ImportKeyPair",
          "ec2:CreateSecurityGroup",
          "ec2:DeleteSecurityGroup",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          "ec2:CreateVolume",
          "ec2:DeleteVolume",
          "ec2:AttachVolume",
          "ec2:DetachVolume",
          "ec2:CreateSnapshot",
          "ec2:DeleteSnapshot",
          "ec2:CreateImage",
          "ec2:DeregisterImage",
          "ec2:CopyImage",
          "ec2:CreateVpc",
          "ec2:DeleteVpc",
          "ec2:CreateSubnet",
          "ec2:DeleteSubnet",
          "ec2:CreateInternetGateway",
          "ec2:DeleteInternetGateway",
          "ec2:AttachInternetGateway",
          "ec2:DetachInternetGateway",
          "ec2:CreateRouteTable",
          "ec2:DeleteRouteTable",
          "ec2:CreateRoute",
          "ec2:DeleteRoute",
          "ec2:AssociateRouteTable",
          "ec2:DisassociateRouteTable"
        ],
        "Resource": "*"
      },
      {
        "Sid": "LambdaFullAccess",
        "Effect": "Allow",
        "Action": [
          "lambda:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudWatchEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudwatch:List*",
          "cloudwatch:Describe*",
          "cloudwatch:Get*",
          "cloudwatch:Update*",
          "cloudwatch:PutMetricData",
          "cloudwatch:PutMetricAlarm",
          "cloudwatch:PutDashboard",
          "cloudwatch:PutCompositeAlarm",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DeleteDashboards",
          "cloudwatch:DisableAlarmActions",
          "cloudwatch:EnableAlarmActions",
          "cloudwatch:SetAlarmState",
          "cloudwatch:TagResource",
          "cloudwatch:UntagResource",
          "logs:List*",
          "logs:Describe*",
          "logs:Get*",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "logs:FilterLogEvents",
          "logs:DeleteLogGroup",
          "logs:DeleteLogStream",
          "logs:PutRetentionPolicy",
          "logs:DeleteRetentionPolicy",
          "logs:TagLogGroup",
          "logs:UntagLogGroup"
        ],
        "Resource": "*"
      },
      {
        "Sid": "SNSEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sns:List*",
          "sns:Get*",
          "sns:CreateTopic",
          "sns:CreatePlatformApplication",
          "sns:CreatePlatformEndpoint",
          "sns:DeleteTopic",
          "sns:DeletePlatformApplication",
          "sns:DeleteEndpoint",
          "sns:Subscribe",
          "sns:Unsubscribe",
          "sns:ConfirmSubscription",
          "sns:Publish",
          "sns:AddPermission",
          "sns:RemovePermission",
          "sns:TagResource",
          "sns:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "RDSEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "rds:List*",
          "rds:Describe*",
          "rds:CreateDBInstance",
          "rds:CreateDBCluster",
          "rds:CreateDBSnapshot",
          "rds:CreateDBClusterSnapshot",
          "rds:CreateDBParameterGroup",
          "rds:CreateDBClusterParameterGroup",
          "rds:CreateDBSubnetGroup",
          "rds:CreateEventSubscription",
          "rds:DeleteDBInstance",
          "rds:DeleteDBCluster",
          "rds:DeleteDBSnapshot",
          "rds:DeleteDBClusterSnapshot",
          "rds:DeleteDBParameterGroup",
          "rds:DeleteDBClusterParameterGroup",
          "rds:DeleteDBSubnetGroup",
          "rds:DeleteEventSubscription",
          "rds:StartDBInstance",
          "rds:StopDBInstance",
          "rds:RebootDBInstance",
          "rds:RestoreDBInstanceFromDBSnapshot",
          "rds:RestoreDBClusterFromSnapshot",
          "rds:AddTagsToResource",
          "rds:RemoveTagsFromResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "SageMakerEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sagemaker:List*",
          "sagemaker:Describe*",
          "sagemaker:Get*",
          "sagemaker:Update*",
          "sagemaker:CreateArtifact",
          "sagemaker:CreateEndpoint",
          "sagemaker:CreateProject",
          "sagemaker:CreateSpace",
          "sagemaker:CreateApp",
          "sagemaker:CreateEndpointConfig",
          "sagemaker:CreateModelPackage",
          "sagemaker:CreateMonitoringSchedule",
          "sagemaker:CreatePipeline",
          "sagemaker:CreateTransformJob",
          "sagemaker:CreateUserProfile",
          "sagemaker:CreateDomain",
          "sagemaker:CreateModel",
          "sagemaker:CreateModelPackageGroup",
          "sagemaker:CreateProcessingJob",
          "sagemaker:CreateTrainingJob",
          "sagemaker:CreateNotebookInstance",
          "sagemaker:CreateNotebookInstanceLifecycleConfig",
          "sagemaker:CreateStudioLifecycleConfig",
          "sagemaker:CreateCodeRepository",
          "sagemaker:CreateCompilationJob",
          "sagemaker:CreateAutoMLJob",
          "sagemaker:CreateHyperParameterTuningJob",
          "sagemaker:DeleteApp",
          "sagemaker:DeleteDomain",
          "sagemaker:DeleteEndpoint",
          "sagemaker:DeleteModelPackage",
          "sagemaker:DeleteModelQualityJobDefinition",
          "sagemaker:DeletePipeline",
          "sagemaker:DeleteEndpointConfig",
          "sagemaker:DeleteProject",
          "sagemaker:DeleteSpace",
          "sagemaker:DeleteModel",
          "sagemaker:DeleteUserProfile",
          "sagemaker:DeleteNotebookInstance",
          "sagemaker:DeleteNotebookInstanceLifecycleConfig",
          "sagemaker:DeleteStudioLifecycleConfig",
          "sagemaker:DeleteCodeRepository",
          "sagemaker:StartPipelineExecution",
          "sagemaker:StopProcessingJob",
          "sagemaker:StartMonitoringSchedule",
          "sagemaker:CreatePresignedDomainUrl",
          "sagemaker:StopMonitoringSchedule",
          "sagemaker:StopPipelineExecution",
          "sagemaker:StopTransformJob",
          "sagemaker:StopTrainingJob",
          "sagemaker:StopHyperParameterTuningJob",
          "sagemaker:StopCompilationJob",
          "sagemaker:StopAutoMLJob",
          "sagemaker:StartNotebookInstance",
          "sagemaker:StopNotebookInstance",
          "sagemaker:AddTags",
          "sagemaker:DeleteTags"
        ],
        "Resource": "*"
      },
      {
        "Sid": "GlueEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "glue:List*",
          "glue:Describe*",
          "glue:Get*",
          "glue:Update*",
          "glue:CreateBlueprint",
          "glue:CreateRegistry",
          "glue:CreateMLTransform",
          "glue:CreateCatalog",
          "glue:CreateConnection",
          "glue:CreateDatabase",
          "glue:CreatePartition",
          "glue:CreateSchema",
          "glue:CreateSession",
          "glue:CreateTrigger",
          "glue:CreateWorkflow",
          "glue:CreateCrawler",
          "glue:CreateJob",
          "glue:CreateTable",
          "glue:CreateDevEndpoint",
          "glue:CreateSecurityConfiguration",
          "glue:DeleteCatalog",
          "glue:DeleteCrawler",
          "glue:DeleteSchema",
          "glue:DeleteSession",
          "glue:DeleteJob",
          "glue:DeleteTable",
          "glue:DeleteConnection",
          "glue:DeleteDatabase",
          "glue:DeletePartition",
          "glue:DeleteTrigger",
          "glue:DeleteWorkflow",
          "glue:DeleteDevEndpoint",
          "glue:DeleteMLTransform",
          "glue:DeleteRegistry",
          "glue:DeleteSecurityConfiguration",
          "glue:StartCrawler",
          "glue:StopCrawler",
          "glue:StopSession",
          "glue:StopTrigger",
          "glue:StartTrigger",
          "glue:StartJobRun",
          "glue:BatchStopJobRun",
          "glue:StartWorkflowRun",
          "glue:StopWorkflowRun",
          "glue:StartMLEvaluationTaskRun",
          "glue:StartMLLabelingSetGenerationTaskRun",
          "glue:UpgradeJob",
          "glue:TagResource",
          "glue:UntagResource",
          "glue:PutDataCatalogEncryptionSettings",
          "glue:PutResourcePolicy",
          "glue:DeleteResourcePolicy"
        ],
        "Resource": "*"
      },
      {
        "Sid": "AthenaEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "athena:List*",
          "athena:Get*",
          "athena:Update*",
          "athena:CreateDataCatalog",
          "athena:CreateWorkGroup",
          "athena:CreateNamedQuery",
          "athena:CreatePreparedStatement",
          "athena:CreateNotebook",
          "athena:CreatePresignedNotebookUrl",
          "athena:RunQuery",
          "athena:StartSession",
          "athena:StartQueryExecution",
          "athena:StartCalculationExecution",
          "athena:StopQueryExecution",
          "athena:StopCalculationExecution",
          "athena:TerminateSession",
          "athena:CancelQueryExecution",
          "athena:DeleteDataCatalog",
          "athena:DeleteNamedQuery",
          "athena:DeleteWorkGroup",
          "athena:DeletePreparedStatement",
          "athena:DeleteNotebook",
          "athena:TagResource",
          "athena:UntagResource",
          "athena:ImportNotebook",
          "athena:ExportNotebook"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeBuildFullAccess",
        "Effect": "Allow",
        "Action": [
          "codebuild:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodePipelineFullAccess",
        "Effect": "Allow",
        "Action": [
          "codepipeline:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudFormationEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudformation:List*",
          "cloudformation:Describe*",
          "cloudformation:Get*",
          "cloudformation:Update*",
          "cloudformation:CreateStack",
          "cloudformation:CreateStackSet",
          "cloudformation:CreateStackInstances",
          "cloudformation:CreateChangeSet",
          "cloudformation:DeleteStack",
          "cloudformation:DeleteStackSet",
          "cloudformation:DeleteStackInstances",
          "cloudformation:DeleteChangeSet",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:CancelUpdateStack",
          "cloudformation:ContinueUpdateRollback",
          "cloudformation:SignalResource",
          "cloudformation:SetStackPolicy",
          "cloudformation:StopStackSetOperation",
          "cloudformation:DetectStackDrift",
          "cloudformation:DetectStackResourceDrift",
          "cloudformation:DetectStackSetDrift",
          "cloudformation:RegisterType",
          "cloudformation:DeregisterType",
          "cloudformation:SetTypeDefaultVersion",
          "cloudformation:RegisterPublisher",
          "cloudformation:PublishType",
          "cloudformation:TestType",
          "cloudformation:TagResource",
          "cloudformation:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "EventBridgeFullAccess",
        "Effect": "Allow",
        "Action": [
          "events:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "ServiceCatalogFullAccess",
        "Effect": "Allow",
        "Action": [
          "servicecatalog:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "SupportFullAccess",
        "Effect": "Allow",
        "Action": [
          "support:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeStarConnectionsFullAccess",
        "Effect": "Allow",
        "Action": [
          "codestar-connections:*"
        ],
        "Resource": "*"
      }
    ]
  },
  "Demo Internals Account Inline Policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "S3FullAccess",
        "Effect": "Allow",
        "Action": [
          "s3:*"
        ],
        "Resource": [
          "arn:aws:s3:::*",
          "arn:aws:s3:::*/*"
        ]
      },
      {
        "Sid": "SageMakerEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sagemaker:List*",
          "sagemaker:Describe*",
          "sagemaker:Get*",
          "sagemaker:Update*",
          "sagemaker:CreateArtifact",
          "sagemaker:CreateEndpoint",
          "sagemaker:CreateProject",
          "sagemaker:CreateSpace",
          "sagemaker:CreateApp",
          "sagemaker:CreateEndpointConfig",
          "sagemaker:CreateModelPackage",
          "sagemaker:CreateMonitoringSchedule",
          "sagemaker:CreatePipeline",
          "sagemaker:CreateTransformJob",
          "sagemaker:CreateUserProfile",
          "sagemaker:CreateDomain",
          "sagemaker:CreateModel",
          "sagemaker:CreateModelPackageGroup",
          "sagemaker:CreateProcessingJob",
          "sagemaker:CreateTrainingJob",
          "sagemaker:CreateNotebookInstance",
          "sagemaker:CreateNotebookInstanceLifecycleConfig",
          "sagemaker:CreateStudioLifecycleConfig",
          "sagemaker:CreateCodeRepository",
          "sagemaker:CreateCompilationJob",
          "sagemaker:CreateAutoMLJob",
          "sagemaker:CreateHyperParameterTuningJob",
          "sagemaker:DeleteApp",
          "sagemaker:DeleteDomain",
          "sagemaker:DeleteEndpoint",
          "sagemaker:DeleteModelPackage",
          "sagemaker:DeleteModelQualityJobDefinition",
          "sagemaker:DeletePipeline",
          "sagemaker:DeleteEndpointConfig",
          "sagemaker:DeleteProject",
          "sagemaker:DeleteSpace",
          "sagemaker:DeleteModel",
          "sagemaker:DeleteUserProfile",
          "sagemaker:DeleteNotebookInstance",
          "sagemaker:DeleteNotebookInstanceLifecycleConfig",
          "sagemaker:DeleteStudioLifecycleConfig",
          "sagemaker:DeleteCodeRepository",
          "sagemaker:StartPipelineExecution",
          "sagemaker:StopProcessingJob",
          "sagemaker:StartMonitoringSchedule",
          "sagemaker:StopMonitoringSchedule",
          "sagemaker:StopPipelineExecution",
          "sagemaker:CreatePresignedDomainUrl",
          "sagemaker:StopTransformJob",
          "sagemaker:StopTrainingJob",
          "sagemaker:StopHyperParameterTuningJob",
          "sagemaker:StopCompilationJob",
          "sagemaker:StopAutoMLJob",
          "sagemaker:StartNotebookInstance",
          "sagemaker:StopNotebookInstance",
          "sagemaker:AddTags",
          "sagemaker:DeleteTags"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudFormationEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudformation:List*",
          "cloudformation:Describe*",
          "cloudformation:Get*",
          "cloudformation:Update*",
          "cloudformation:CreateStack",
          "cloudformation:CreateStackSet",
          "cloudformation:CreateStackInstances",
          "cloudformation:CreateChangeSet",
          "cloudformation:DeleteStack",
          "cloudformation:DeleteStackSet",
          "cloudformation:DeleteStackInstances",
          "cloudformation:DeleteChangeSet",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:CancelUpdateStack",
          "cloudformation:ContinueUpdateRollback",
          "cloudformation:SignalResource",
          "cloudformation:SetStackPolicy",
          "cloudformation:StopStackSetOperation",
          "cloudformation:DetectStackDrift",
          "cloudformation:DetectStackResourceDrift",
          "cloudformation:DetectStackSetDrift",
          "cloudformation:RegisterType",
          "cloudformation:DeregisterType",
          "cloudformation:SetTypeDefaultVersion",
          "cloudformation:RegisterPublisher",
          "cloudformation:PublishType",
          "cloudformation:TestType",
          "cloudformation:TagResource",
          "cloudformation:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "LambdaFullAccess",
        "Effect": "Allow",
        "Action": [
          "lambda:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "EventBridgeFullAccess",
        "Effect": "Allow",
        "Action": [
          "events:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "IAMEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "iam:List*",
          "iam:Get*",
          "iam:Update*",
          "iam:CreateGroup",
          "iam:DeleteRole",
          "iam:CreateAccessKey",
          "iam:CreateRole",
          "iam:DeleteUser",
          "iam:CreateUser",
          "iam:PassRole",
          "iam:CreatePolicy",
          "iam:DeleteUserPolicy",
          "iam:PutRolePolicy",
          "iam:DetachUserPolicy",
          "iam:AttachRolePolicy",
          "iam:DeletePolicy",
          "iam:DeleteRolePolicy",
          "iam:AttachUserPolicy",
          "iam:DetachRolePolicy",
          "iam:PutUserPolicy",
          "iam:TagPolicy",
          "iam:TagRole",
          "iam:TagUser",
          "iam:UntagRole",
          "iam:UntagUser",
          "iam:UntagPolicy",
          "iam:CreateInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:AddRoleToInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeStarConnectionsFullAccess",
        "Effect": "Allow",
        "Action": [
          "codestar-connections:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudWatchEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudwatch:List*",
          "cloudwatch:Describe*",
          "cloudwatch:Get*",
          "cloudwatch:Update*",
          "cloudwatch:PutMetricData",
          "cloudwatch:PutMetricAlarm",
          "cloudwatch:PutDashboard",
          "cloudwatch:PutCompositeAlarm",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DeleteDashboards",
          "cloudwatch:DisableAlarmActions",
          "cloudwatch:EnableAlarmActions",
          "cloudwatch:SetAlarmState",
          "cloudwatch:TagResource",
          "cloudwatch:UntagResource",
          "logs:List*",
          "logs:Describe*",
          "logs:Get*",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "logs:FilterLogEvents",
          "logs:DeleteLogGroup",
          "logs:DeleteLogStream",
          "logs:PutRetentionPolicy",
          "logs:DeleteRetentionPolicy",
          "logs:TagLogGroup",
          "logs:UntagLogGroup"
        ],
        "Resource": "*"
      },
      {
        "Sid": "SNSEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sns:List*",
          "sns:Get*",
          "sns:CreateTopic",
          "sns:CreatePlatformApplication",
          "sns:CreatePlatformEndpoint",
          "sns:DeleteTopic",
          "sns:DeletePlatformApplication",
          "sns:DeleteEndpoint",
          "sns:Subscribe",
          "sns:Unsubscribe",
          "sns:ConfirmSubscription",
          "sns:Publish",
          "sns:AddPermission",
          "sns:RemovePermission",
          "sns:TagResource",
          "sns:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "GlueEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "glue:List*",
          "glue:Describe*",
          "glue:Get*",
          "glue:Update*",
          "glue:CreateBlueprint",
          "glue:CreateRegistry",
          "glue:CreateMLTransform",
          "glue:CreateCatalog",
          "glue:CreateConnection",
          "glue:CreateDatabase",
          "glue:CreatePartition",
          "glue:CreateSchema",
          "glue:CreateSession",
          "glue:CreateTrigger",
          "glue:CreateWorkflow",
          "glue:CreateCrawler",
          "glue:CreateJob",
          "glue:CreateTable",
          "glue:CreateDevEndpoint",
          "glue:CreateSecurityConfiguration",
          "glue:DeleteCatalog",
          "glue:DeleteCrawler",
          "glue:DeleteSchema",
          "glue:DeleteSession",
          "glue:DeleteJob",
          "glue:DeleteTable",
          "glue:DeleteConnection",
          "glue:DeleteDatabase",
          "glue:DeletePartition",
          "glue:DeleteTrigger",
          "glue:DeleteWorkflow",
          "glue:DeleteDevEndpoint",
          "glue:DeleteMLTransform",
          "glue:DeleteRegistry",
          "glue:DeleteSecurityConfiguration",
          "glue:StartCrawler",
          "glue:StopCrawler",
          "glue:StopSession",
          "glue:StopTrigger",
          "glue:StartTrigger",
          "glue:StartJobRun",
          "glue:BatchStopJobRun",
          "glue:StartWorkflowRun",
          "glue:StopWorkflowRun",
          "glue:StartMLEvaluationTaskRun",
          "glue:StartMLLabelingSetGenerationTaskRun",
          "glue:UpgradeJob",
          "glue:TagResource",
          "glue:UntagResource",
          "glue:PutDataCatalogEncryptionSettings",
          "glue:PutResourcePolicy",
          "glue:DeleteResourcePolicy"
        ],
        "Resource": "*"
      },
      {
        "Sid": "AthenaEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "athena:List*",
          "athena:Get*",
          "athena:Update*",
          "athena:CreateDataCatalog",
          "athena:CreateWorkGroup",
          "athena:CreateNamedQuery",
          "athena:CreatePreparedStatement",
          "athena:CreateNotebook",
          "athena:CreatePresignedNotebookUrl",
          "athena:RunQuery",
          "athena:StartSession",
          "athena:StartQueryExecution",
          "athena:StartCalculationExecution",
          "athena:StopQueryExecution",
          "athena:StopCalculationExecution",
          "athena:TerminateSession",
          "athena:CancelQueryExecution",
          "athena:DeleteDataCatalog",
          "athena:DeleteNamedQuery",
          "athena:DeleteWorkGroup",
          "athena:DeletePreparedStatement",
          "athena:DeleteNotebook",
          "athena:TagResource",
          "athena:UntagResource",
          "athena:ImportNotebook",
          "athena:ExportNotebook"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeBuildFullAccess",
        "Effect": "Allow",
        "Action": [
          "codebuild:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodePipelineFullAccess",
        "Effect": "Allow",
        "Action": [
          "codepipeline:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "ServiceCatalogFullAccess",
        "Effect": "Allow",
        "Action": [
          "servicecatalog:*"
        ],
        "Resource": "*"
      }
    ]
  },
  "Hackathon Account Inline Policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "S3FullAccess",
        "Effect": "Allow",
        "Action": [
          "s3:*"
        ],
        "Resource": [
          "arn:aws:s3:::*",
          "arn:aws:s3:::*/*"
        ]
      },
      {
        "Sid": "SageMakerEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sagemaker:List*",
          "sagemaker:Describe*",
          "sagemaker:Get*",
          "sagemaker:Update*",
          "sagemaker:CreateArtifact",
          "sagemaker:CreateEndpoint",
          "sagemaker:CreateProject",
          "sagemaker:CreateSpace",
          "sagemaker:CreateApp",
          "sagemaker:CreateEndpointConfig",
          "sagemaker:CreateModelPackage",
          "sagemaker:CreateMonitoringSchedule",
          "sagemaker:CreatePipeline",
          "sagemaker:CreateTransformJob",
          "sagemaker:CreateUserProfile",
          "sagemaker:CreateDomain",
          "sagemaker:CreateModel",
          "sagemaker:CreateModelPackageGroup",
          "sagemaker:CreateProcessingJob",
          "sagemaker:CreateTrainingJob",
          "sagemaker:CreateNotebookInstance",
          "sagemaker:CreateNotebookInstanceLifecycleConfig",
          "sagemaker:CreateStudioLifecycleConfig",
          "sagemaker:CreateCodeRepository",
          "sagemaker:CreateCompilationJob",
          "sagemaker:CreateAutoMLJob",
          "sagemaker:CreateHyperParameterTuningJob",
          "sagemaker:DeleteApp",
          "sagemaker:DeleteDomain",
          "sagemaker:DeleteEndpoint",
          "sagemaker:DeleteModelPackage",
          "sagemaker:DeleteModelQualityJobDefinition",
          "sagemaker:DeletePipeline",
          "sagemaker:DeleteEndpointConfig",
          "sagemaker:DeleteProject",
          "sagemaker:DeleteSpace",
          "sagemaker:DeleteModel",
          "sagemaker:DeleteUserProfile",
          "sagemaker:DeleteNotebookInstance",
          "sagemaker:DeleteNotebookInstanceLifecycleConfig",
          "sagemaker:DeleteStudioLifecycleConfig",
          "sagemaker:DeleteCodeRepository",
          "sagemaker:StartPipelineExecution",
          "sagemaker:StopProcessingJob",
          "sagemaker:StartMonitoringSchedule",
          "sagemaker:StopMonitoringSchedule",
          "sagemaker:StopPipelineExecution",
          "sagemaker:CreatePresignedDomainUrl",
          "sagemaker:StopTransformJob",
          "sagemaker:StopTrainingJob",
          "sagemaker:StopHyperParameterTuningJob",
          "sagemaker:StopCompilationJob",
          "sagemaker:StopAutoMLJob",
          "sagemaker:StartNotebookInstance",
          "sagemaker:StopNotebookInstance",
          "sagemaker:AddTags",
          "sagemaker:DeleteTags"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudFormationEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudformation:List*",
          "cloudformation:Describe*",
          "cloudformation:Get*",
          "cloudformation:Update*",
          "cloudformation:CreateStack",
          "cloudformation:CreateStackSet",
          "cloudformation:CreateStackInstances",
          "cloudformation:CreateChangeSet",
          "cloudformation:DeleteStack",
          "cloudformation:DeleteStackSet",
          "cloudformation:DeleteStackInstances",
          "cloudformation:DeleteChangeSet",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:CancelUpdateStack",
          "cloudformation:ContinueUpdateRollback",
          "cloudformation:SignalResource",
          "cloudformation:SetStackPolicy",
          "cloudformation:StopStackSetOperation",
          "cloudformation:DetectStackDrift",
          "cloudformation:DetectStackResourceDrift",
          "cloudformation:DetectStackSetDrift",
          "cloudformation:RegisterType",
          "cloudformation:DeregisterType",
          "cloudformation:SetTypeDefaultVersion",
          "cloudformation:RegisterPublisher",
          "cloudformation:PublishType",
          "cloudformation:TestType",
          "cloudformation:TagResource",
          "cloudformation:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "LambdaFullAccess",
        "Effect": "Allow",
        "Action": [
          "lambda:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "EventBridgeFullAccess",
        "Effect": "Allow",
        "Action": [
          "events:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "IAMEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "iam:List*",
          "iam:Get*",
          "iam:Update*",
          "iam:CreateGroup",
          "iam:DeleteRole",
          "iam:CreateAccessKey",
          "iam:CreateRole",
          "iam:DeleteUser",
          "iam:CreateUser",
          "iam:PassRole",
          "iam:CreatePolicy",
          "iam:DeleteUserPolicy",
          "iam:PutRolePolicy",
          "iam:DetachUserPolicy",
          "iam:AttachRolePolicy",
          "iam:DeletePolicy",
          "iam:DeleteRolePolicy",
          "iam:AttachUserPolicy",
          "iam:DetachRolePolicy",
          "iam:PutUserPolicy",
          "iam:TagPolicy",
          "iam:TagRole",
          "iam:TagUser",
          "iam:UntagRole",
          "iam:UntagUser",
          "iam:UntagPolicy",
          "iam:CreateInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:AddRoleToInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeStarConnectionsFullAccess",
        "Effect": "Allow",
        "Action": [
          "codestar-connections:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudWatchEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "cloudwatch:List*",
          "cloudwatch:Describe*",
          "cloudwatch:Get*",
          "cloudwatch:Update*",
          "cloudwatch:PutMetricData",
          "cloudwatch:PutMetricAlarm",
          "cloudwatch:PutDashboard",
          "cloudwatch:PutCompositeAlarm",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DeleteDashboards",
          "cloudwatch:DisableAlarmActions",
          "cloudwatch:EnableAlarmActions",
          "cloudwatch:SetAlarmState",
          "cloudwatch:TagResource",
          "cloudwatch:UntagResource",
          "logs:List*",
          "logs:Describe*",
          "logs:Get*",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "logs:FilterLogEvents",
          "logs:DeleteLogGroup",
          "logs:DeleteLogStream",
          "logs:PutRetentionPolicy",
          "logs:DeleteRetentionPolicy",
          "logs:TagLogGroup",
          "logs:UntagLogGroup"
        ],
        "Resource": "*"
      },
      {
        "Sid": "EC2EnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "ec2:List*",
          "ec2:Describe*",
          "ec2:Get*",
          "ec2:Update*",
          "ec2:RunInstances",
          "ec2:StartInstances",
          "ec2:StopInstances",
          "ec2:RebootInstances",
          "ec2:TerminateInstances",
          "ec2:CreateKeyPair",
          "ec2:DeleteKeyPair",
          "ec2:ImportKeyPair",
          "ec2:CreateSecurityGroup",
          "ec2:DeleteSecurityGroup",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          "ec2:CreateVolume",
          "ec2:DeleteVolume",
          "ec2:AttachVolume",
          "ec2:DetachVolume",
          "ec2:CreateSnapshot",
          "ec2:DeleteSnapshot",
          "ec2:CreateVpc",
          "ec2:DeleteVpc",
          "ec2:CreateSubnet",
          "ec2:DeleteSubnet",
          "ec2:CreateInternetGateway",
          "ec2:DeleteInternetGateway",
          "ec2:AttachInternetGateway",
          "ec2:DetachInternetGateway",
          "ec2:CreateRouteTable",
          "ec2:DeleteRouteTable",
          "ec2:CreateRoute",
          "ec2:DeleteRoute",
          "ec2:AssociateRouteTable",
          "ec2:DisassociateRouteTable"
        ],
        "Resource": "*"
      },
      {
        "Sid": "SNSEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "sns:List*",
          "sns:Get*",
          "sns:CreateTopic",
          "sns:CreatePlatformApplication",
          "sns:CreatePlatformEndpoint",
          "sns:DeleteTopic",
          "sns:DeletePlatformApplication",
          "sns:DeleteEndpoint",
          "sns:Subscribe",
          "sns:Unsubscribe",
          "sns:ConfirmSubscription",
          "sns:Publish",
          "sns:AddPermission",
          "sns:RemovePermission",
          "sns:TagResource",
          "sns:UntagResource"
        ],
        "Resource": "*"
      },
      {
        "Sid": "GlueEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "glue:List*",
          "glue:Describe*",
          "glue:Get*",
          "glue:Update*",
          "glue:CreateBlueprint",
          "glue:CreateRegistry",
          "glue:CreateMLTransform",
          "glue:CreateCatalog",
          "glue:CreateConnection",
          "glue:CreateDatabase",
          "glue:CreatePartition",
          "glue:CreateSchema",
          "glue:CreateSession",
          "glue:CreateTrigger",
          "glue:CreateWorkflow",
          "glue:CreateCrawler",
          "glue:CreateJob",
          "glue:CreateTable",
          "glue:CreateDevEndpoint",
          "glue:CreateSecurityConfiguration",
          "glue:DeleteCatalog",
          "glue:DeleteCrawler",
          "glue:DeleteSchema",
          "glue:DeleteSession",
          "glue:DeleteJob",
          "glue:DeleteTable",
          "glue:DeleteConnection",
          "glue:DeleteDatabase",
          "glue:DeletePartition",
          "glue:DeleteTrigger",
          "glue:DeleteWorkflow",
          "glue:DeleteDevEndpoint",
          "glue:DeleteMLTransform",
          "glue:DeleteRegistry",
          "glue:DeleteSecurityConfiguration",
          "glue:StartCrawler",
          "glue:StopCrawler",
          "glue:StopSession",
          "glue:StopTrigger",
          "glue:StartTrigger",
          "glue:StartJobRun",
          "glue:BatchStopJobRun",
          "glue:StartWorkflowRun",
          "glue:StopWorkflowRun",
          "glue:StartMLEvaluationTaskRun",
          "glue:StartMLLabelingSetGenerationTaskRun",
          "glue:UpgradeJob",
          "glue:TagResource",
          "glue:UntagResource",
          "glue:PutDataCatalogEncryptionSettings",
          "glue:PutResourcePolicy",
          "glue:DeleteResourcePolicy"
        ],
        "Resource": "*"
      },
      {
        "Sid": "AthenaEnhancedAccess",
        "Effect": "Allow",
        "Action": [
          "athena:List*",
          "athena:Get*",
          "athena:Update*",
          "athena:CreateDataCatalog",
          "athena:CreateWorkGroup",
          "athena:CreateNamedQuery",
          "athena:CreatePreparedStatement",
          "athena:CreateNotebook",
          "athena:CreatePresignedNotebookUrl",
          "athena:RunQuery",
          "athena:StartSession",
          "athena:StartQueryExecution",
          "athena:StartCalculationExecution",
          "athena:StopQueryExecution",
          "athena:StopCalculationExecution",
          "athena:TerminateSession",
          "athena:CancelQueryExecution",
          "athena:DeleteDataCatalog",
          "athena:DeleteNamedQuery",
          "athena:DeleteWorkGroup",
          "athena:DeletePreparedStatement",
          "athena:DeleteNotebook",
          "athena:TagResource",
          "athena:UntagResource",
          "athena:ImportNotebook",
          "athena:ExportNotebook"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodeBuildFullAccess",
        "Effect": "Allow",
        "Action": [
          "codebuild:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CodePipelineFullAccess",
        "Effect": "Allow",
        "Action": [
          "codepipeline:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "ServiceCatalogFullAccess",
        "Effect": "Allow",
        "Action": [
          "servicecatalog:*"
        ],
        "Resource": "*"
      }
    ]
  }
}