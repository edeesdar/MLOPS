{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "AllServicesAccess",
      "Effect": "Allow",
      "Action": [
        "codestar-connections:*",
        "codecommit:*",
        "codeartifact:List*",
        "codeartifact:Describe*",
        "codeartifact:Get*",
        "codeartifact:Update*",
        "codeartifact:CreateRepository",
        "codeartifact:DeleteRepository",
        "codeartifact:CreateDomain",
        "codeartifact:DeleteDomain",
        "codeartifact:ReadFromRepository",
        "codeartifact:PublishPackageVersion",
        "codeartifact:DeletePackageVersions",
        "codeartifact:TagResource",
        "codeartifact:UntagResource",
        "codebuild:*",
        "codedeploy:*",
        "codepipeline:List*",
        "codepipeline:Get*",
        "codepipeline:Update*",
        "codepipeline:CreatePipeline",
        "codepipeline:DeletePipeline",
        "codepipeline:StartPipelineExecution",
        "codepipeline:StopPipelineExecution",
        "codepipeline:EnableStageTransition",
        "codepipeline:DisableStageTransition",
        "codepipeline:TagResource",
        "codepipeline:UntagResource",
        "codeconnections:*",
        "events:*",
        "apigateway:GET",
        "apigateway:POST",
        "apigateway:PUT",
        "apigateway:DELETE",
        "apigateway:PATCH",
        "logs:List*",
        "logs:Describe*",
        "logs:Get*",
        "logs:CreateLogGroup",
        "logs:PutLogEvents",
        "logs:FilterLogEvents",
        "logs:StartLiveTail",
        "logs:StartQuery",
        "logs:StopLiveTail",
        "logs:StopQuery",
        "logs:TestMetricFilter",
        "logs:TestTransformer",
        "logs:Unmask",
        "athena:List*",
        "athena:Get*",
        "athena:Update*",
        "athena:StartQueryExecution",
        "athena:StopQueryExecution",
        "athena:CreateWorkGroup",
        "athena:DeleteWorkGroup",
        "glue:List*",
        "glue:Describe*",
        "glue:Get*",
        "glue:Update*",
        "glue:SearchTables",
        "glue:CreateDatabase",
        "glue:DeleteDatabase",
        "glue:CreateTable",
        "glue:DeleteTable",
        "glue:CreatePartition",
        "glue:DeletePartition",
        "glue:CreateJob",
        "glue:DeleteJob",
        "glue:StartJobRun",
        "glue:CreateCrawler",
        "glue:DeleteCrawler",
        "glue:StartCrawler",
        "glue:StopCrawler",
        "glue:CreateConnection",
        "glue:DeleteConnection",
        "glue:CreateClassifier",
        "glue:DeleteClassifier",
        "glue:CreateTrigger",
        "glue:DeleteTrigger",
        "glue:StartTrigger",
        "glue:StopTrigger",
        "glue:CreateWorkflow",
        "glue:DeleteWorkflow",
        "glue:StartWorkflowRun",
        "glue:StopWorkflowRun",
        "glue:CreateDevEndpoint",
        "glue:DeleteDevEndpoint",
        "glue:CreateMLTransform",
        "glue:DeleteMLTransform",
        "glue:CreateSecurityConfiguration",
        "glue:DeleteSecurityConfiguration",
        "glue:CreateRegistry",
        "glue:DeleteRegistry",
        "glue:CreateSchema",
        "glue:DeleteSchema",
        "glue:RegisterSchemaVersion",
        "glue:DeleteSchemaVersions",
        "glue:TagResource",
        "glue:UntagResource",
        "glue:GetCatalogs",
        "lakeformation:List*",
        "lakeformation:Describe*",
        "lakeformation:Get*",
        "lakeformation:Update*",
        "lakeformation:RegisterResource",
        "lakeformation:DeregisterResource",
        "lakeformation:GrantPermissions",
        "lakeformation:RevokePermissions",
        "lakeformation:CreateLFTag",
        "lakeformation:DeleteLFTag",
        "lakeformation:AddLFTagsToResource",
        "lakeformation:RemoveLFTagsFromResource",
        "lakeformation:CreateDataCellsFilter",
        "lakeformation:DeleteDataCellsFilter",
        "lakeformation:StartTransaction",
        "lakeformation:CommitTransaction",
        "lakeformation:CancelTransaction",
        "lakeformation:ExtendTransaction",
        "lakeformation:StartQueryPlanning",
        "cloudformation:List*",
        "cloudformation:Describe*",
        "cloudformation:Get*",
        "cloudformation:Update*",
        "cloudformation:CreateStack",
        "cloudformation:DeleteStack",
        "cloudformation:ValidateTemplate",
        "cloudformation:SetStackPolicy",
        "cloudformation:TagResource",
        "cloudformation:UntagResource",
        "cloudformation:CreateUploadBucket",
        "cloudformation:CreateChangeSet",
        "scheduler:List*",
        "scheduler:Get*",
        "access-analyzer:ValidatePolicy",
        "datazone:List*",
        "datazone:Get*",
        "datazone:Update*",
        "datazone:CreateDomain",
        "datazone:DeleteDomain",
        "datazone:CreateProject",
        "datazone:CreateProjectProfile",
        "datazone:DeleteProject",
        "datazone:CreateEnvironment",
        "datazone:DeleteEnvironment",
        "datazone:CreateAsset",
        "datazone:DeleteAsset",
        "datazone:CreateAssetType",
        "datazone:DeleteAssetType",
        "datazone:CreateDataSource",
        "datazone:DeleteDataSource",
        "datazone:StartDataSourceRun",
        "datazone:CreateGlossary",
        "datazone:DeleteGlossary",
        "datazone:CreateGlossaryTerm",
        "datazone:DeleteGlossaryTerm",
        "datazone:CreateUserProfile",
        "datazone:CreateGroupProfile",
        "datazone:SearchTypes",
        "datazone:SearchListings",
        "datazone:SearchUserProfiles",
        "datazone:SearchGroupProfiles",
        "datazone:CreateSubscriptionRequest",
        "datazone:DeleteSubscriptionRequest",
        "datazone:AcceptSubscriptionRequest",
        "datazone:RejectSubscriptionRequest",
        "datazone:CancelSubscription",
        "datazone:TagResource",
        "datazone:UntagResource",
        "sso:List*",
        "sso:Describe*",
        "sso:Get*",
        "identitystore:List*",
        "identitystore:Describe*",
        "identitystore:Get*",
        "dms:List*",
        "dms:Describe*",
        "dms:Update*",
        "dms:CreateEndpoint",
        "dms:DeleteEndpoint",
        "dms:TestConnection",
        "dms:CreateReplicationTask",
        "dms:DeleteReplicationTask",
        "dms:StartReplicationTask",
        "dms:StopReplicationTask",
        "dms:CreateReplicationInstance",
        "dms:DeleteReplicationInstance",
        "dms:RebootReplicationInstance",
        "dms:CreateReplicationSubnetGroup",
        "dms:DeleteReplicationSubnetGroup",
        "dms:CreateEventSubscription",
        "dms:DeleteEventSubscription",
        "dms:ImportCertificate",
        "dms:DeleteCertificate",
        "dms:DeleteConnection",
        "dms:RefreshSchemas",
        "dms:AddTagsToResource",
        "dms:RemoveTagsFromResource",
        "ec2:List*",
        "ec2:Describe*",
        "ec2:Get*",
        "ec2:Update*",
        "ec2:RunInstances",
        "ec2:StartInstances",
        "ec2:StopInstances",
        "ec2:RebootInstances",
        "ec2:TerminateInstances",
        "ec2:MonitorInstances",
        "ec2:UnmonitorInstances",
        "ec2:AllocateAddress",
        "ec2:ReleaseAddress",
        "ec2:AssociateAddress",
        "ec2:DisassociateAddress",
        "ec2:CreateVolume",
        "ec2:DeleteVolume",
        "ec2:AttachVolume",
        "ec2:DetachVolume",
        "ec2:CreateSnapshot",
        "ec2:DeleteSnapshot",
        "ec2:CopySnapshot",
        "ec2:CreateImage",
        "ec2:DeregisterImage",
        "ec2:CopyImage",
        "ec2:CreateSecurityGroup",
        "ec2:DeleteSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:CreateKeyPair",
        "ec2:DeleteKeyPair",
        "ec2:ImportKeyPair",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:AttachNetworkInterface",
        "ec2:DetachNetworkInterface",
        "ec2:CreateLaunchTemplate",
        "ec2:DeleteLaunchTemplate",
        "ec2:CreatePlacementGroup",
        "ec2:DeletePlacementGroup",
        "ec2:CreateTags",
        "ec2:DeleteTags",
        "ec2:CreateVpc",
        "ec2:DeleteVpc",
        "ec2:CreateSubnet",
        "ec2:DeleteSubnet",
        "ec2:CreateRouteTable",
        "ec2:DeleteRouteTable",
        "ec2:CreateRoute",
        "ec2:DeleteRoute",
        "ec2:AssociateRouteTable",
        "ec2:DisassociateRouteTable",
        "ec2:CreateInternetGateway",
        "ec2:AttachInternetGateway",
        "ec2:DetachInternetGateway",
        "ec2:DeleteInternetGateway",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:CreateNatGateway",
        "ec2:DeleteNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:DeleteNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:DeleteNetworkAclEntry",
        "ec2:CreateDhcpOptions",
        "ec2:AssociateDhcpOptions",
        "ec2:DeleteDhcpOptions",
        "ec2:CreateVpcEndpoint",
        "ec2:DeleteVpcEndpoints",
        "iam:List*",
        "iam:Get*",
        "iam:Update*",
        "iam:CreateRole",
        "iam:DeleteRole",
        "iam:PassRole",
        "iam:AttachRolePolicy",
        "iam:DetachRolePolicy",
        "iam:PutRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:TagRole",
        "iam:UntagRole",
        "iam:TagUser",
        "iam:UntagUser",
        "iam:AttachUserPolicy",
        "iam:DetachUserPolicy",
        "iam:PutUserPolicy",
        "iam:DeleteUserPolicy",
        "iam:AddUserToGroup",
        "iam:RemoveUserFromGroup",
        "iam:PutGroupPolicy",
        "iam:DeleteGroupPolicy",
        "iam:AttachGroupPolicy",
        "iam:DetachGroupPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:CreatePolicy",
        "lambda:*",
        "kafka:List*",
        "kafka:Describe*",
        "kafka:Get*",
        "kafka:Update*",
        "kafka:CreateCluster",
        "kafka:CreateClusterV2",
        "kafka:DeleteCluster",
        "kafka:TagResource",
        "kafka:UntagResource",
        "kafka-cluster:Describe*",
        "kafka-cluster:Connect",
        "kafka-cluster:AlterCluster",
        "kafka-cluster:CreateTopic",
        "kafka-cluster:WriteData",
        "kafka-cluster:ReadData",
        "kafka-cluster:AlterTopic",
        "kafka-cluster:DeleteTopic",
        "rds:List*",
        "rds:Describe*",
        "rds:CreateDBInstance",
        "rds:DeleteDBInstance",
        "rds:RebootDBInstance",
        "rds:StartDBInstance",
        "rds:StopDBInstance",
        "rds:CreateDBCluster",
        "rds:DeleteDBCluster",
        "rds:RebootDBCluster",
        "rds:StartDBCluster",
        "rds:StopDBCluster",
        "rds:CreateDBSnapshot",
        "rds:DeleteDBSnapshot",
        "rds:CopyDBSnapshot",
        "rds:RestoreDBInstanceFromDBSnapshot",
        "rds:CreateDBClusterSnapshot",
        "rds:DeleteDBClusterSnapshot",
        "rds:CopyDBClusterSnapshot",
        "rds:RestoreDBClusterFromSnapshot",
        "rds:CreateDBParameterGroup",
        "rds:DeleteDBParameterGroup",
        "rds:CreateOptionGroup",
        "rds:DeleteOptionGroup",
        "rds:CreateDBSubnetGroup",
        "rds:DeleteDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:DeleteEventSubscription",
        "rds:AddTagsToResource",
        "rds:RemoveTagsFromResource",
        "s3:*",
        "sagemaker:List*",
        "sagemaker:Describe*",
        "sagemaker:Get*",
        "sagemaker:Update*",
        "sagemaker:CreateDomain",
        "sagemaker:DeleteDomain",
        "sagemaker:CreateUserProfile",
        "sagemaker:DeleteUserProfile",
        "sagemaker:CreateApp",
        "sagemaker:DeleteApp",
        "sagemaker:CreateNotebookInstance",
        "sagemaker:DeleteNotebookInstance",
        "sagemaker:StartNotebookInstance",
        "sagemaker:StopNotebookInstance",
        "sagemaker:CreatePresignedDomainUrl",
        "sagemaker:CreateNotebookInstanceLifecycleConfig",
        "sagemaker:DeleteNotebookInstanceLifecycleConfig",
        "sagemaker:CreateTrainingJob",
        "sagemaker:StopTrainingJob",
        "sagemaker:CreateHyperParameterTuningJob",
        "sagemaker:StopHyperParameterTuningJob",
        "sagemaker:CreateModel",
        "sagemaker:DeleteModel",
        "sagemaker:CreateEndpoint",
        "sagemaker:DeleteEndpoint",
        "sagemaker:InvokeEndpoint",
        "sagemaker:CreateEndpointConfig",
        "sagemaker:DeleteEndpointConfig",
        "sagemaker:CreatePipeline",
        "sagemaker:DeletePipeline",
        "sagemaker:StartPipelineExecution",
        "sagemaker:StopPipelineExecution",
        "sagemaker:CreateProject",
        "sagemaker:DeleteProject",
        "sagemaker:CreateModelPackage",
        "sagemaker:DeleteModelPackage",
        "sagemaker:CreateModelPackageGroup",
        "sagemaker:DeleteModelPackageGroup",
        "sagemaker:CreateAlgorithm",
        "sagemaker:DeleteAlgorithm",
        "sagemaker:CreateCodeRepository",
        "sagemaker:DeleteCodeRepository",
        "sagemaker:AddTags",
        "sagemaker:DeleteTags",
        "servicecatalog:*",
        "sts:Get*",
        "sts:AssumeRole",
        "sts:AssumeRoleWithWebIdentity",
        "sts:AssumeRoleWithSAML",
        "sts:GetFederationToken",
        "sts:GetSessionToken",
        "sts:DecodeAuthorizationMessage",
        "sts:TagSession",
        "sts:SetSourceIdentity",
        "cloudwatch:List*",
        "cloudwatch:Describe*",
        "cloudwatch:Get*",
        "cloudwatch:GenerateQuery",
        "cloudwatch:GenerateQueryResultsSummary",
        "cloudtrail:List*",
        "cloudtrail:Describe*",
        "cloudtrail:Get*",
        "cloudtrail:GenerateQueryResultsSummary",
        "cloudtrail:LookupEvents",
        "cloudtrail:SearchSampleQueries",
        "kms:List*",
        "kms:Describe*",
        "kms:Get*",
        "kms:Decrypt"
      ],
      "Resource": "*"
    }
  ]
}